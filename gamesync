#!/usr/bin/env python3
import sys
import os
import logging
import subprocess
from contextlib import redirect_stdout


def is_env_var(arg):
    return "=" in arg


def wrap_process():
    input_command = sys.argv[1:]
    split_index = None

    for i, item in enumerate(input_command):
        if not is_env_var(item):
            split_index = i
            break
    if split_index is not None:
        env_vars = input_command[:split_index]
        cmd_vars = input_command[split_index:]
    else:
        logging.error('command invalid, it is only made up of environment variables!')
        exit(1)

    command_str = ' '.join(cmd_vars)
    env_dict = {var.split("=")[0]: var.split("=")[1] for var in env_vars}

    logging.info(f'executing: {command_str}')

    subprocess.run(cmd_vars, shell=True, env=env_dict)

    logging.info(f'completed executing {command_str}')


if __name__ == '__main__':
    DEBUG = os.getenv('GAMESYNC_DEBUG')
    log_file = None
    if DEBUG == 'true':
        log_file = f'{os.path.expanduser("~")}/.local/share/gamesync/log.log'

    logging.basicConfig(
        filename=log_file,
        filemode='a',
        format='%(asctime)s | %(levelname)s | %(message)s',
        level=logging.NOTSET,
        datefmt='%Y-%m-%d %H:%M:%S')
    wrap_process()

